// Code generated by MockGen. DO NOT EDIT.
// Source: /home/nakamuraitsuki/program/webrtc-practice/backend/internal/interface/adapter/websocket_connection_adapter.go
//
// Generated by this command:
//
//	mockgen -source=/home/nakamuraitsuki/program/webrtc-practice/backend/internal/interface/adapter/websocket_connection_adapter.go -destination=./mocks/interface/adapter/websocket_connection_adapter_mock.go -package=mock_adapter
//

// Package mock_adapter is a generated GoMock package.
package mock_adapter

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConnAdapter is a mock of ConnAdapter interface.
type MockConnAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockConnAdapterMockRecorder
	isgomock struct{}
}

// MockConnAdapterMockRecorder is the mock recorder for MockConnAdapter.
type MockConnAdapterMockRecorder struct {
	mock *MockConnAdapter
}

// NewMockConnAdapter creates a new mock instance.
func NewMockConnAdapter(ctrl *gomock.Controller) *MockConnAdapter {
	mock := &MockConnAdapter{ctrl: ctrl}
	mock.recorder = &MockConnAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnAdapter) EXPECT() *MockConnAdapterMockRecorder {
	return m.recorder
}

// CloseFunc mocks base method.
func (m *MockConnAdapter) CloseFunc() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseFunc")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseFunc indicates an expected call of CloseFunc.
func (mr *MockConnAdapterMockRecorder) CloseFunc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseFunc", reflect.TypeOf((*MockConnAdapter)(nil).CloseFunc))
}

// ReadMessageFunc mocks base method.
func (m *MockConnAdapter) ReadMessageFunc() (int, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMessageFunc")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReadMessageFunc indicates an expected call of ReadMessageFunc.
func (mr *MockConnAdapterMockRecorder) ReadMessageFunc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMessageFunc", reflect.TypeOf((*MockConnAdapter)(nil).ReadMessageFunc))
}

// WriteMessageFunc mocks base method.
func (m *MockConnAdapter) WriteMessageFunc(arg0 int, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessageFunc", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessageFunc indicates an expected call of WriteMessageFunc.
func (mr *MockConnAdapterMockRecorder) WriteMessageFunc(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessageFunc", reflect.TypeOf((*MockConnAdapter)(nil).WriteMessageFunc), arg0, arg1)
}
