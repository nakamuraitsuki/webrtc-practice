// Code generated by MockGen. DO NOT EDIT.
// Source: /home/nakamuraitsuki/program/webrtc-practice/backend/internal/interface/factory/websocket_connection_factory.go
//
// Generated by this command:
//
//	mockgen --source=/home/nakamuraitsuki/program/webrtc-practice/backend/internal/interface/factory/websocket_connection_factory.go --destination=./mocks/interface/factory/websocket_conn_factory_mock.go --package=mock_factory
//

// Package mock_factory is a generated GoMock package.
package mock_factory

import (
	http "net/http"
	reflect "reflect"

	service "example.com/webrtc-practice/internal/domain/service"
	adapter "example.com/webrtc-practice/internal/interface/adapter"
	gomock "go.uber.org/mock/gomock"
)

// MockWebsocketConnectionAdapterFactory is a mock of WebsocketConnectionAdapterFactory interface.
type MockWebsocketConnectionAdapterFactory struct {
	ctrl     *gomock.Controller
	recorder *MockWebsocketConnectionAdapterFactoryMockRecorder
	isgomock struct{}
}

// MockWebsocketConnectionAdapterFactoryMockRecorder is the mock recorder for MockWebsocketConnectionAdapterFactory.
type MockWebsocketConnectionAdapterFactoryMockRecorder struct {
	mock *MockWebsocketConnectionAdapterFactory
}

// NewMockWebsocketConnectionAdapterFactory creates a new mock instance.
func NewMockWebsocketConnectionAdapterFactory(ctrl *gomock.Controller) *MockWebsocketConnectionAdapterFactory {
	mock := &MockWebsocketConnectionAdapterFactory{ctrl: ctrl}
	mock.recorder = &MockWebsocketConnectionAdapterFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebsocketConnectionAdapterFactory) EXPECT() *MockWebsocketConnectionAdapterFactoryMockRecorder {
	return m.recorder
}

// NewAdapter mocks base method.
func (m *MockWebsocketConnectionAdapterFactory) NewAdapter(conn service.WebSocketConnection) adapter.ConnAdapter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewAdapter", conn)
	ret0, _ := ret[0].(adapter.ConnAdapter)
	return ret0
}

// NewAdapter indicates an expected call of NewAdapter.
func (mr *MockWebsocketConnectionAdapterFactoryMockRecorder) NewAdapter(conn any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewAdapter", reflect.TypeOf((*MockWebsocketConnectionAdapterFactory)(nil).NewAdapter), conn)
}

// MockWebsocketConnectionFactory is a mock of WebsocketConnectionFactory interface.
type MockWebsocketConnectionFactory struct {
	ctrl     *gomock.Controller
	recorder *MockWebsocketConnectionFactoryMockRecorder
	isgomock struct{}
}

// MockWebsocketConnectionFactoryMockRecorder is the mock recorder for MockWebsocketConnectionFactory.
type MockWebsocketConnectionFactoryMockRecorder struct {
	mock *MockWebsocketConnectionFactory
}

// NewMockWebsocketConnectionFactory creates a new mock instance.
func NewMockWebsocketConnectionFactory(ctrl *gomock.Controller) *MockWebsocketConnectionFactory {
	mock := &MockWebsocketConnectionFactory{ctrl: ctrl}
	mock.recorder = &MockWebsocketConnectionFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebsocketConnectionFactory) EXPECT() *MockWebsocketConnectionFactoryMockRecorder {
	return m.recorder
}

// NewConnection mocks base method.
func (m *MockWebsocketConnectionFactory) NewConnection(w http.ResponseWriter, r *http.Request) (service.WebSocketConnection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewConnection", w, r)
	ret0, _ := ret[0].(service.WebSocketConnection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewConnection indicates an expected call of NewConnection.
func (mr *MockWebsocketConnectionFactoryMockRecorder) NewConnection(w, r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewConnection", reflect.TypeOf((*MockWebsocketConnectionFactory)(nil).NewConnection), w, r)
}
