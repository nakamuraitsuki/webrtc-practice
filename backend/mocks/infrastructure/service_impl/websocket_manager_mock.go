// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/infrastructure/service_impl/websocket_manager/real_conn_addopter.go
//
// Generated by this command:
//
//	mockgen -source=./internal/infrastructure/service_impl/websocket_manager/real_conn_addopter.go -destination=./mocks/infrastructure/service_impl/websocket_manager_mock.go
//

// Package mock_websocketmanager is a generated GoMock package.
package mock_websocketmanager

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRealConnAdopter is a mock of RealConnAdopter interface.
type MockRealConnAdopter struct {
	ctrl     *gomock.Controller
	recorder *MockRealConnAdopterMockRecorder
	isgomock struct{}
}

// MockRealConnAdopterMockRecorder is the mock recorder for MockRealConnAdopter.
type MockRealConnAdopterMockRecorder struct {
	mock *MockRealConnAdopter
}

// NewMockRealConnAdopter creates a new mock instance.
func NewMockRealConnAdopter(ctrl *gomock.Controller) *MockRealConnAdopter {
	mock := &MockRealConnAdopter{ctrl: ctrl}
	mock.recorder = &MockRealConnAdopterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRealConnAdopter) EXPECT() *MockRealConnAdopterMockRecorder {
	return m.recorder
}

// CloseFunc mocks base method.
func (m *MockRealConnAdopter) CloseFunc() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseFunc")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseFunc indicates an expected call of CloseFunc.
func (mr *MockRealConnAdopterMockRecorder) CloseFunc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseFunc", reflect.TypeOf((*MockRealConnAdopter)(nil).CloseFunc))
}

// ReadMessageFunc mocks base method.
func (m *MockRealConnAdopter) ReadMessageFunc() (int, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMessageFunc")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ReadMessageFunc indicates an expected call of ReadMessageFunc.
func (mr *MockRealConnAdopterMockRecorder) ReadMessageFunc() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMessageFunc", reflect.TypeOf((*MockRealConnAdopter)(nil).ReadMessageFunc))
}

// WriteMessageFunc mocks base method.
func (m *MockRealConnAdopter) WriteMessageFunc(arg0 int, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteMessageFunc", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteMessageFunc indicates an expected call of WriteMessageFunc.
func (mr *MockRealConnAdopterMockRecorder) WriteMessageFunc(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteMessageFunc", reflect.TypeOf((*MockRealConnAdopter)(nil).WriteMessageFunc), arg0, arg1)
}
