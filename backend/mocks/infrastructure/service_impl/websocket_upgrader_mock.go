// Code generated by MockGen. DO NOT EDIT.
// Source: /home/nakamuraitsuki/program/webrtc-practice/backend/internal/infrastructure/service_impl/websocket_upgrader/websocket_upgrader.go
//
// Generated by this command:
//
//	mockgen -source=/home/nakamuraitsuki/program/webrtc-practice/backend/internal/infrastructure/service_impl/websocket_upgrader/websocket_upgrader.go -destination=./mocks/infrastructure/websocket_upgrader_mock.go
//

// Package mock_websocketupgrader is a generated GoMock package.
package mock_service_impl

import (
	http "net/http"
	reflect "reflect"

	websocket "github.com/gorilla/websocket"
	gomock "go.uber.org/mock/gomock"
)

// MockWebsocketUpgraderInterface is a mock of WebsocketUpgraderInterface interface.
type MockWebsocketUpgraderInterface struct {
	ctrl     *gomock.Controller
	recorder *MockWebsocketUpgraderInterfaceMockRecorder
	isgomock struct{}
}

// MockWebsocketUpgraderInterfaceMockRecorder is the mock recorder for MockWebsocketUpgraderInterface.
type MockWebsocketUpgraderInterfaceMockRecorder struct {
	mock *MockWebsocketUpgraderInterface
}

// NewMockWebsocketUpgraderInterface creates a new mock instance.
func NewMockWebsocketUpgraderInterface(ctrl *gomock.Controller) *MockWebsocketUpgraderInterface {
	mock := &MockWebsocketUpgraderInterface{ctrl: ctrl}
	mock.recorder = &MockWebsocketUpgraderInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebsocketUpgraderInterface) EXPECT() *MockWebsocketUpgraderInterfaceMockRecorder {
	return m.recorder
}

// Upgrade mocks base method.
func (m *MockWebsocketUpgraderInterface) Upgrade(w http.ResponseWriter, r *http.Request, responseHeader http.Header) (*websocket.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upgrade", w, r, responseHeader)
	ret0, _ := ret[0].(*websocket.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Upgrade indicates an expected call of Upgrade.
func (mr *MockWebsocketUpgraderInterfaceMockRecorder) Upgrade(w, r, responseHeader any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upgrade", reflect.TypeOf((*MockWebsocketUpgraderInterface)(nil).Upgrade), w, r, responseHeader)
}
