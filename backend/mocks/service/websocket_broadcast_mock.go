// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/service/websocket_broadcast_service.go
//
// Generated by this command:
//
//	mockgen -source=./internal/domain/service/websocket_broadcast_service.go -destination=./mocks/service/websocket_broadcast_mock.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	entity "example.com/webrtc-practice/internal/domain/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockWebSocketBroadcastService is a mock of WebSocketBroadcastService interface.
type MockWebSocketBroadcastService struct {
	ctrl     *gomock.Controller
	recorder *MockWebSocketBroadcastServiceMockRecorder
	isgomock struct{}
}

// MockWebSocketBroadcastServiceMockRecorder is the mock recorder for MockWebSocketBroadcastService.
type MockWebSocketBroadcastServiceMockRecorder struct {
	mock *MockWebSocketBroadcastService
}

// NewMockWebSocketBroadcastService creates a new mock instance.
func NewMockWebSocketBroadcastService(ctrl *gomock.Controller) *MockWebSocketBroadcastService {
	mock := &MockWebSocketBroadcastService{ctrl: ctrl}
	mock.recorder = &MockWebSocketBroadcastServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebSocketBroadcastService) EXPECT() *MockWebSocketBroadcastServiceMockRecorder {
	return m.recorder
}

// Receive mocks base method.
func (m *MockWebSocketBroadcastService) Receive() entity.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Receive")
	ret0, _ := ret[0].(entity.Message)
	return ret0
}

// Receive indicates an expected call of Receive.
func (mr *MockWebSocketBroadcastServiceMockRecorder) Receive() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Receive", reflect.TypeOf((*MockWebSocketBroadcastService)(nil).Receive))
}

// Send mocks base method.
func (m *MockWebSocketBroadcastService) Send(message entity.Message) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Send", message)
}

// Send indicates an expected call of Send.
func (mr *MockWebSocketBroadcastServiceMockRecorder) Send(message any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockWebSocketBroadcastService)(nil).Send), message)
}
